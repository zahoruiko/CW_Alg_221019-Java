public class Main {
    public static void main(String[] args) {
        int[] sourceArray = {5, 2, 7, 7, 5};
        System.out.println("Count of Int duplications = " + searchIntDuplications(sourceArray));
        System.out.println("");

        String[] stringArr = {"bcd", "abd", "jude", "bcd"};
        System.out.println("Count of String duplications = " + searchStringDuplications(stringArr));
        System.out.println("");

        // Поиск второго минимума
        int[] sourceArray2 = {-1, 4, 0, 2, 7, -3};
        System.out.println("Min[1] = " + searchMin(sourceArray2));
        int[] reducedArray = reduceArray(sourceArray2, searchMin(sourceArray2));
        System.out.println("Min[2] = " + searchMin(reducedArray));
    }

    public static int searchIntDuplications(int[] sourceArray) {
        int countOfDuplications = 0;
        for (int i = 0; i < sourceArray.length; i++) {
            for (int j = i + 1; j < sourceArray.length; j++) {
                if(sourceArray[i] == sourceArray [j]) {
                    System.out.println("Found - " + sourceArray[i]);
                    countOfDuplications++;
                    break;
                }
            }
        }
        return countOfDuplications;
    }

    public static int searchStringDuplications(String[] stringArr) {
        int countOfDuplications = 0;
        for (int i = 0; i < stringArr.length; i++) {
            for (int j = i + 1; j < stringArr.length; j++) {
                if(stringArr[i].equals(stringArr [j])) {
                    System.out.println("Found - " + stringArr[i]);
                    countOfDuplications++;
                    break;
                }
            }
        }
        return countOfDuplications;
    }

    public static int searchMin(int[] inputArr) {
        int min = inputArr[0];
        for (int item: inputArr) {
            if(min > item) {
                min = item;
            }
        }
//        System.out.println("Min = " + min);
        return min;
    }

    public static int[] reduceArray(int[] inputArray, int deleteElement) {
        int[] newArray = new int[inputArray.length-1];
        int j = 0;
        for (int i = 0; i < inputArray.length; i++) {
            if(inputArray[i] != deleteElement) {
                newArray[j] = inputArray[i];
                j++;
            }
        }
        return newArray;
    }
}
